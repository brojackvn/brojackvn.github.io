@article{xxxx,
  abbr={JSS},
  title={EnseSmells: Deep ensemble and programming language models for automated code smells detection},
  author={Ho, Anh and  M. T. Bui, Anh and Nguyen, Phuong T. and Di Salle, Amleto and Le, Bach},
  journal={Under Review at Journal of Systems & Software},
  year={2024},
  publisher={Elsevier},
  pdf={https://drive.google.com/file/d/18Ou1_PAQ_VEr6nBabfdY4uxFsXs1Z55e/view?usp=drive_link},
  abstract={A smell in software source code denotes an indication of sub-optimal design and implementation decisions, potentially hindering the code understanding and, in turn, raising the likelihood of being prone to changes and faults. Identifying these code issues at an early stage in the software development process can mitigate these problems and enhance the overall quality of the software. Current research primarily focuses on the utilization of deep learning-based models to investigate the semantic information concealed within source code instructions to detect code smells, with limited attention given to the importance of structural and design-related features. This paper proposes a novel approach to code smell detection based on a deep learning model that places importance on the fusion of design-related features and source code embedding techniques. We further provide a thorough analysis of how different source code embedding models affect the detection performance with respect to different code smell types. We conducted an empirical investigation employing four widely-used code smell benchmark datasets. Our findings demonstrate that the inclusion of design-related features significantly enhances the detection accuracy for various code smell types, comparing to the state-of-the art works.}
}